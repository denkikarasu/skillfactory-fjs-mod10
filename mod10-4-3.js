string = 'Hello';
var str = '';

for (var i = 0; i < string.length; i++) {
    str += string.slice(string.length - i - 1, string.length - i);
}

console.log(str);

// Что лучше - объявить переменную и записать в нее длину строки или использовать свойство .length? В данном случае скорость исполнения кода выше во 2м варианте, но всегда ли так будет? Есть ли общее правило? (для аналогичных случаев, например, с длиной массива и т.п.)

/*---------------------*/

// Лучше пользоваться свойством length и не создавать лишнюю переменную, она бы просто дублировала информацию, которая уже содержится в length. Кроме специфических случаев, когда длина массива может меняться.

// Что касается задания - всё выполнено верно, но есть более короткий вариант решения:


// split разбивает строку на массив символов
// reverse меняет местами символы (элементы массива)
// join соединяет массив в строку
const reverseString = string.split("").reverse().join("");
